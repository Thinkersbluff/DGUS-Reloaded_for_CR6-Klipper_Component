# Last Updated: 29 August 2023

# NOTE: This cfg file contains some (but not all) of the Klipper macros which are invoked by DGUS-Reloaded cfg files
#       Architecturally, some or all of the scripts in this file may more properly belong in routines.cfg or in t5uid1.py.
#       For the moment, they are collected here, while alternative architectures/approaches are considered

# NOTE: At v1.4.1 of the DGUS-Reloaded Klipper component, the [t5uid1] section of this cfg file was moved back into the printer.cfg file
# - It solved issue #37, in which SAVE_CONFIG failed when it tried to save changes to the display brightness variable. (Not an expected behaviour)
# - It simultaneously enabled SAVE_CONFIG to make display brightness setting changes persist after RESTART and FIRMWARE RESTART events. 

# NOTE: The Material temperature preset values are presently defined in dgus_reloaded/__init__.py, as follows:
#    'temp_pla': {
#        'hotend': 210,
#        'bed': 60
#    },
#    'temp_abs': {
#        'hotend': 240,
#        'bed': 90
#    },
#    'temp_petg': {
#        'hotend': 225,
#        'bed': 80
#    },
# You can edit that file, to change these values.  I am presently researching how to move those definitions 
# to the [t5uid1] section of printer.cfg and eventually to add a SetUp menu that will enable uses to change these values from the menu.


#================
# The following macros enable DGUS-Reloaded to make certain parameters persist after RESTART or FIRMWARE RESTART events.
# The idea and these scripts were inspired and informed by:
#    https://www.reddit.com/r/klippers/comments/v63nxr/rerun_last_print_macro/?utm_source=share&utm_medium=ios_app&utm_name=ioscss&utm_content=2&utm_term=1

[save_variables]
filename: ~/klipper/klippy/extras/t5uid1/dgus_reloaded/variables.cfg
# The variables presently supported this way are:
#   'filename' - holds the name of the last file printed
#   'disable_pause_stop' - used to govern whether PAUSE print and STOP print are available, while printing
#   'enable_runout_sensor' - used to govern whether the filament sensor is enabled or disabled at boot, independently of the printer.cfg pause_on_runout: setting.

# PRINTING MACROS #########################################
[gcode_macro STORE_REPRINT_PARAMETERS]
description: Saves parameters required to reprint same job.
gcode:
    {% set svv = printer.save_variables.variables %}
    {% set filepath=printer.virtual_sdcard.file_path %}
    {% set filename=filepath.split('/')%}
    SAVE_VARIABLE VARIABLE=last_file VALUE='"{ filename[-1] }"'

[gcode_macro REPEAT_LAST_PRINT]
description: Repeat the last print. Assigned to the DWIN_SET PRINT button
# From: https://www.reddit.com/r/klippers/comments/v63nxr/rerun_last_print_macro/?utm_source=share&utm_medium=ios_app&utm_name=ioscss&utm_content=2&utm_term=1
gcode:
  {% if 'save_variables' in printer %}
    {% set svv = printer.save_variables.variables %}
    {% if 'last_file' in svv %}
      {% set last_file=svv.last_file %}
      {% if last_file != "None" %}
        SDCARD_PRINT_FILE FILENAME="{last_file}"
      {% else %}
        RESPOND TYPE=error MSG="last_file filename in variables.cfg is 'None'"
        M117 Nothing to print
      {% endif %}
    {% else %}
      RESPOND TYPE=error MSG="variable 'last_file' not found in variables.cfg"
      M117 Nothing to print
    {% endif %}
  {% else %}
    RESPOND TYPE=error MSG="save_variables config section not defined"
    M117 Not configured correctly
  {% endif %}

[gcode_macro SET_DISABLE_PAUSE_STOP]
description: Saves a control variable tested by dgus_reloaded vars_in.cfg before processing PAUSE and STOP commands
gcode: 
    {% set svv = printer.save_variables.variables %}
    SAVE_VARIABLE VARIABLE=disable_pause_stop VALUE=True
    M117 PAUSE and STOP suspended

[gcode_macro CLEAR_DISABLE_PAUSE_STOP]
description: Saves a control variable tested by dgus_reloaded vars_in.cfg before processing PAUSE and STOP commands
gcode: 
    {% set svv = printer.save_variables.variables %}
    SAVE_VARIABLE VARIABLE=disable_pause_stop VALUE=False
    M117 PAUSE and STOP restored

# FILAMENT RUNOUT SENSOR ENABLE|DISABLE MACROS #######################

[gcode_macro RUNOUT_ON]
gcode:
  SET_FILAMENT_SENSOR_BASE SENSOR=RunoutSensor ENABLE=1
  {% set svv = printer.save_variables.variables %}
  SAVE_VARIABLE VARIABLE=enable_runout_sensor VALUE=1
  REPORT_FILAMENT_SENSOR_ENABLE_STATUS

[gcode_macro RUNOUT_OFF]
gcode:
  SET_FILAMENT_SENSOR_BASE SENSOR=RunoutSensor ENABLE=0
  {% set svv = printer.save_variables.variables %}
  SAVE_VARIABLE VARIABLE=enable_runout_sensor VALUE=0
  REPORT_FILAMENT_SENSOR_ENABLE_STATUS

[gcode_macro SET_FILAMENT_SENSOR]
description: Sets the filament sensor on/off, based on Saved variable enable_runout_sensor in variables.cfg*
# *Klipper's default behaviour is otherwise to enable or disable based on pause_on_runout: True or False in printer.cfg
rename_existing: SET_FILAMENT_SENSOR_BASE
gcode:
  {% set svv = printer.save_variables.variables %}
  {% if svv.enable_runout_sensor==0 %}
    RUNOUT_OFF
  {% elif svv.enable_runout_sensor==1 %}
    RUNOUT_ON
  {% endif %}

